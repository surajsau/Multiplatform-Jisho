[versions]
accompanist = "0.27.0"
agp = "8.1.0-alpha06"
android-desugar = "2.0.2"
androidx-appcompat = "1.6.1"
androidx-concurrent-futures = "1.1.0"
androidx-core = "1.9.0"
androidx-shortcuts = "1.1.0"
androidx-test-core = "1.5.0"
androidx-test-ext = "1.1.5"
androidx-test-espresso = "3.5.1"
androidx-test-rules = "1.5.0"
androidx-test-runner = "1.5.2"
androidx-test-uiautomator = "2.2.0"
androidx-benchmark = "1.2.0-alpha09"
androidx-profileinstaller = "1.2.0"
benmanesversion = "0.42.0"
coil = "2.2.2"
compose = "1.4.0-beta01"
compose-activity = "1.6.1"
compose-compiler = "1.4.0"
core-domain = "0.0.1"
core-strings = "0.0.1"
core-utils = "0.0.1"
coroutine = "1.6.4"
datastore = "1.0.0"
detekt = "1.22.0"
firebase = "31.2.2"
firebase-auth = "21.0.8"
firebase-auth-ui = "7.2.0"
firebase-crashlytics = "2.9.4"
firebase-kmm = "1.6.2"
glance = "1.0.0-alpha05"
hilt = "2.43.2"
hilt-navigation = "1.0.0"
junit = "4.13.2"
klock = "3.2.0"
koTest = "5.2.3"
koin = "3.3.3"
koin-compose = "3.4.2"
konfig = "0.13.3"
kotlin = "1.8.0"
kotlin-datetime = "0.4.0"
kotlin-immutable-collections = "0.3.5"
kotlin-serialization = "1.4.0"
lifecycle = "2.6.0-beta01"
material-compose = "1.1.7"
material3 = "1.8.0"
material3-compose = "1.1.0-alpha06"
media3 = "1.0.0-rc01"
moko-resources = "0.20.1"
molecule = "0.7.0"
multiplatform-settings = "1.0.0-RC"
napier = "2.5.0"
native-coroutine = "0.12.6-new-mm"
navigation = "2.5.3"
okhttp = "4.10.0"
play-services = "4.3.15"
play-services-auth = "20.4.1"
protobuf = "3.21.12"
protobuf-gradlePlugin = "0.8.19"
resources = "0.19.1"
retrofit = "2.9.0"
robolectric = "4.9"
showkase = "1.0.0-beta13"
sqldelight = "2.0.0-alpha05"
sqliter = "1.2.2"
testParameterInjector = "1.9"
twitter-compose-rules = "0.0.12"
version-update = "0.3.1"
workmanager = "2.7.1"

[libraries]

# gradle plugins
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-desugar = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "android-desugar" }
firebase-crahlytics-gradlePlugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebase-crashlytics" }
moko-resources-gradlePlugin = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
play-services-gradlePlugin = { module = "com.google.gms:google-services", version.ref = "play-services" }
konfig-gradlePlugin = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "konfig" }
detekt-gradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
molecule-gradlePlugin = { module = "app.cash.molecule:molecule-gradle-plugin", version.ref = "molecule" }

# android
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core"}
androidx-datastore-core = { module = "androidx.datastore:datastore", version.ref = "datastore" }
androidx-datastore-preference = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-shortcuts = { module = "androidx.core:core-google-shortcuts", version.ref = "androidx-shortcuts" }
androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
compose-compiler = { group = "androidx.compose.compiler", name = "compiler", version.ref = "compose-compiler" }
compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "compose" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime", version.ref = "compose" }
compose-tooling =  { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-foundation = { group = "androidx.compose.foundation", name = "foundation", version.ref = "compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
google-material3 = { group = "com.google.android.material", name = "material", version.ref = "material3" }
compose-icons-core = { group = "androidx.compose.material", name = "material-icons-core", version.ref = "compose" }
compose-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "compose" }
compose-material = { group = "androidx.compose.material", name = "material", version.ref = "compose" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3-compose" }
androidx-concurrent-futures = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "androidx-concurrent-futures" }

# koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-compose" }

# coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutine" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutine" }

# accompanist
accompanist-systemui = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "accompanist" }
accompanist-permission = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-viewpager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist-viewpager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist-navigation-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }

# sqldelight
sqldelight-gradlePlugin = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }

# firebase
firebase-bom = "com.google.firebase:firebase-bom:31.2.2"
firebase-common = { module = "com.google.firebase:firebase-common-ktx" }
firebase-auth-ui = { module = "com.firebaseui:firebase-ui-auth", version.ref = "firebase-auth-ui" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-storage = { module = "com.google.firebase:firebase-storage-ktx" }
firebase-auth = { module = "com.google.firebase:firebase-auth-ktx" }

play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "play-services-auth" }

# resources
moko-resources-core = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
moko-resources-test = { module = "dev.icerock.moko:resources-test", version.ref = "moko-resources" }

# detekt
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
detekt-test = { module = "io.gitlab.arturbosch.detekt:detekt-test", version.ref = "detekt" }
detekt-twitterComposeRules = { module = "com.twitter.compose.rules:detekt", version.ref = "twitter-compose-rules" }

# exoplayer
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }

# kotlinx
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlin-serialization" }
kotlin-immutablecollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-immutable-collections" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }

# logging
napier-core = { module = "io.github.aakira:napier", version.ref = "napier" }

# klock
klock = { module = "com.soywiz.korlibs.klock:klock", version.ref = "klock" }

# retrofit
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp-core = { module = "com.squareup.okhttp3:okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }

# glance
glance-widget = { module = "androidx.glance:glance-appwidget", version.ref = "glance" }
glance-wearos = { module = "androidx.glance:glance-wear-tiles", version.ref = "glance" }

# workmanager
workmanager-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }

# test
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidx-test-core" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-uiautomator = {module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx-test-uiautomator"}
androidx-benchmark = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidx-benchmark" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidx-profileinstaller" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
showkase-runtime = { module = "com.airbnb.android:showkase", version.ref = "showkase" }
showkase-processor = { module = "com.airbnb.android:showkase-processor", version.ref = "showkase" }
test-parameter-injector = { module = "com.google.testparameterinjector:test-parameter-injector", version.ref = "testParameterInjector" }

# protobuf
protobuf-protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }
protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }

# coil
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# preference
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }

[bundles]
koin = [ "koin-core", "koin-android", "koin-compose" ]
compose = [ "compose-ui", "compose-activity", "compose-tooling", "compose-foundation", "compose-navigation", "androidx-viewmodel-compose", "androidx-runtime-compose" ]
accompanist = [ "accompanist-systemui", "accompanist-permission" ]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-gradle = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "benmanesversion" }
sqldelight-gradlePlugin = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-gradlePlugin" }